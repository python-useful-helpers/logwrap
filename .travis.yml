language: python
os: linux
dist: bionic

install:
  - &upgrade_python_toolset pip install --upgrade pip setuptools wheel
  - &install_test_deps pip install --upgrade -r pytest_requirements.txt
  - &install_deps pip install -r CI_REQUIREMENTS.txt
  - pip install --upgrade coveralls

_python:
  - &python38
    name: "Python 3.8"
    python: "3.8"
  - &python39
    name: "Python 3.9"
    python: "3.9"
  - &python310
    name: "Python 3.10"
    python: "3.10"
  - &python311
    name: "Python 3.11"
    python: "3.11-dev"

_helpers:
  - &install_cython pip install --upgrade Cython
  - &build_package python setup.py bdist_wheel clean
  - &install_built pip install logwrap --no-index -f dist
  - &test_no_cov  py.test -vvv test
  - &test_cythonized
    stage: Test cythonized
    install:
      - *upgrade_python_toolset
      - *install_test_deps
      - *install_deps
      - *install_cython
    script:
      - *build_package
      - *install_built
      - *test_no_cov

  - &static_analysis
    stage: Static analysis
    <<: *python310

  - &code_style_check
    stage: Code style check
    <<: *python38

  - &deploy
    <<: *python38
    if: tag IS present
    services:
    - docker
    install:
      - *upgrade_python_toolset
      - *install_deps
      - pip install -U --upgrade-strategy=eager --no-cache-dir twine
    before_deploy:
      - *build_package
    deploy:
      - provider: pypi
        # `skip_cleanup: true` is required to preserve binary wheels, built
        # inside of manylinux* docker container during `script` step above.
        cleanup: false
        skip_cleanup: true
        username: penguinolog
        password:
          secure: QNBIAaqj682K95G2jVBFLgKmzscDz8sYLrJOmRVa+TmwV/n19Nar1fTdt86V2FRgl5SBbuGwAz6s9RD+X1j+OAEUKQ/wUmkP8hLriKcTaP5dH5+WWvwH9TD5A3SSvYOI9G9Qq+0rG71F/OMEBtTI5lrIaiPt39YUwhejLsUYy2vcvT/yxEnrMFc3gGFEvIRA6pnZWY+t3cK/uDdhDXutNSvLKTEuPILswqiGQZ/79Aio5HzQasCjvmWKr2c9nwZB1SoSfbhvNWitOzJZ5+7wc0ewFcRHBMeiLmGjI/z6FRVp/QTHtwhAwzRQQ955MiqcX2fLnVlfE68qT47RpX9ueqhFXMgIDqJ/3O/ln5619xZ1ykuUT8i/gUm2/lXGV9Wz0IwDxz4RpL8ul24qLdECXhVlBBDA3VjJT8YbErvY3EB+YKHiJCywAcOa8boHTMDxmP/BLUh24PrsKs4eYW5MVRR3V6Un8ajCCk2ZhDlyQXSxPsRA7/dHQS5a6d1neCCapdwR+VKHjjBmW0MppxQmsxjg6poOtWR/d1bT9XuHdu6/vAmTAosZN56MnR0KD4ZVJxM5OoMqE3Fgw6jusJnyWyxJ5XRkG/NuDITTC7aS5MQuPOGUSw3GzzAwZOgSRCDmgLMxRaZcv8a8r8GqpzVHpB9D+zfOhvh8+1BOhNFXMMc=
        on:
          tags: true
        distributions: sdist
        upload_docs: false
        skip_existing: true

script:
  - python setup.py develop -v
  - py.test --cov-report= --cov=logwrap
  - coverage report -m --fail-under 87

jobs:
  include:
    - <<: *static_analysis
      <<: *python38
      name: "PyLint"
      install:
        - *upgrade_python_toolset
        - *install_deps
        - pip install --upgrade "pylint >= 2.6.0"
      script:
        - python setup.py develop -v clean
        - python setup.py --version clean
        - pylint logwrap
    - <<: *static_analysis
      name: "Bandit"
      install:
        - *upgrade_python_toolset
        - pip install --upgrade bandit
      script:
        - bandit -r logwrap
    - <<: *static_analysis
      name: "MyPy"
      install:
        - *upgrade_python_toolset
        - *install_deps
        - pip install --upgrade "mypy >= 0.720"
      script:
        - python setup.py --version clean
        - mypy --strict logwrap
    - <<: *static_analysis
      name: "PEP8"
      install:
        - *upgrade_python_toolset
        - pip install --upgrade -r flake8_requirements.txt
      script:
        - flake8 logwrap

    #  - <<: *code_style_check
    #    name: "PEP257"
    #    install:
    #    - *upgrade_python_toolset
    #    - pip install --upgrade pydocstyle
    #    script:
    #    - pydocstyle -v logwrap
    - <<: *code_style_check
      name: "Black formatting"
      install:
        - *upgrade_python_toolset
        - pip install --upgrade black regex
      script:
        - black --check logwrap

    - stage: test
      <<: *python38
      after_success:
        - coveralls
    - stage: test
      <<: *python39
      after_success:
        - coveralls
    - stage: test
      <<: *python310
      after_success:
        - coveralls
    - stage: test
      <<: *python311
      after_success:
        - coveralls

    - <<: *test_cythonized
      <<: *python38
    - <<: *test_cythonized
      <<: *python39
    - <<: *test_cythonized
      <<: *python310

    - stage: deploy
      # This prevents job from appearing in test plan unless commit is tagged:
      <<: *deploy
      name: Build universal and cythonized for aarch64 bdist_wheel. Deploy bdist.
      arch: arm64
      script:
        - ./tools/run_docker_manylinux2014.sh "logwrap" "aarch64"

cache: pip
before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log
